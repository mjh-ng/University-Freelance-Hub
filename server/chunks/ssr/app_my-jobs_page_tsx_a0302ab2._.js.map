{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/markhong/creative-project-520521/app/my-jobs/page.tsx"],"sourcesContent":["'use client'\n\nimport { useEffect, useState } from 'react'\nimport { useRouter } from 'next/navigation'\nimport supabase from '@/lib/supabaseBrowserClient'\n\nexport default function MyJobsPage() {\n  const router = useRouter()\n  const [jobs, setJobs] = useState<any[]>([])\n  const [editingJob, setEditingJob] = useState<any | null>(null)\n  const [title, setTitle] = useState('')\n  const [description, setDescription] = useState('')\n  const [isPaid, setIsPaid] = useState(false)\n  const [posterEmail, setPosterEmail] = useState('')\n  const [message, setMessage] = useState('')\n  const [loading, setLoading] = useState(false)\n\n  // Fetch current user + their jobs\n  useEffect(() => {\n    const init = async () => {\n      const { data: userData, error: userError } = await supabase.auth.getUser()\n      if (userError || !userData.user) {\n        router.replace('/login')\n        return\n      }\n      const email = userData.user.email!\n      setPosterEmail(email)\n\n      const { data: jobData, error: jobError } = await supabase\n        .from('jobs')\n        .select('*')\n        .eq('poster_email', email)\n        .order('created_at', { ascending: false })\n\n      if (jobError) {\n        setMessage('‚ùå Failed to load jobs: ' + jobError.message)\n      } else {\n        setJobs(jobData)\n      }\n    }\n\n    init()\n  }, [router])\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault()\n    setLoading(true)\n    setMessage(editingJob ? 'Updating job...' : 'Posting job...')\n\n    const payload = { title, description, is_paid: isPaid, poster_email: posterEmail }\n\n    const { error } = editingJob\n      ? await supabase.from('jobs').update(payload).eq('id', editingJob.id)\n      : await supabase.from('jobs').insert([payload])\n\n    if (error) {\n      setMessage('‚ùå Failed: ' + error.message)\n    } else {\n      setMessage(editingJob ? '‚úÖ Job updated!' : '‚úÖ Job posted!')\n      setTitle('')\n      setDescription('')\n      setIsPaid(false)\n      setEditingJob(null)\n      refreshJobs()\n    }\n\n    setLoading(false)\n  }\n\n  const refreshJobs = async () => {\n    const { data, error } = await supabase\n      .from('jobs')\n      .select('*')\n      .eq('poster_email', posterEmail)\n      .order('created_at', { ascending: false })\n    if (!error) setJobs(data!)\n  }\n\n  const handleEdit = (job: any) => {\n    setEditingJob(job)\n    setTitle(job.title)\n    setDescription(job.description)\n    setIsPaid(job.is_paid)\n  }\n\n  const handleDelete = async (jobId: string) => {\n    const { error } = await supabase.from('jobs').delete().eq('id', jobId)\n    if (!error) refreshJobs()\n  }\n\n  return (\n    <div className=\"p-6 max-w-3xl mx-auto\">\n      <div className=\"flex justify-between items-center mb-6\">\n        <h1 className=\"text-2xl font-bold\">My Jobs Dashboard</h1>\n        <button\n          onClick={() => router.push('/')}\n          className=\"text-blue-600 underline hover:text-blue-800\"\n        >\n          ‚Üê Back to Home\n        </button>\n      </div>\n\n      {posterEmail && (\n        <p className=\"text-sm text-gray-500 mb-4\">Logged in as: {posterEmail}</p>\n      )}\n\n      <form onSubmit={handleSubmit} className=\"space-y-4 mb-8 border-b pb-6\">\n        <h2 className=\"text-lg font-semibold\">\n          {editingJob ? 'Edit Job' : 'Post a New Job'}\n        </h2>\n        <input\n          type=\"text\"\n          placeholder=\"Job title\"\n          value={title}\n          onChange={(e) => setTitle(e.target.value)}\n          required\n          className=\"w-full border px-3 py-2 rounded\"\n        />\n        <textarea\n          placeholder=\"Job description\"\n          value={description}\n          onChange={(e) => setDescription(e.target.value)}\n          className=\"w-full border px-3 py-2 rounded\"\n          rows={4}\n        />\n        <label className=\"flex items-center gap-2\">\n          <input\n            type=\"checkbox\"\n            checked={isPaid}\n            onChange={() => setIsPaid(!isPaid)}\n          />\n          Paid job\n        </label>\n        <button\n          type=\"submit\"\n          disabled={loading}\n          className=\"bg-black text-white px-4 py-2 rounded\"\n        >\n          {loading ? 'Submitting...' : editingJob ? 'Update Job' : 'Post Job'}\n        </button>\n        {message && <p className=\"text-sm text-gray-700 mt-2\">{message}</p>}\n      </form>\n\n      <div className=\"space-y-6\">\n        {jobs.map((job) => (\n          <div key={job.id} className=\"border p-4 rounded\">\n            <h3 className=\"text-lg font-semibold\">{job.title}</h3>\n            <p className=\"text-gray-600\">{job.description}</p>\n            <p className=\"text-sm text-gray-400 mt-1\">\n              {job.is_paid ? 'üí∞ Paid' : 'üö´ Unpaid'}\n            </p>\n            <div className=\"flex gap-2 mt-3\">\n              <button\n                onClick={() => handleEdit(job)}\n                className=\"text-blue-600 hover:underline\"\n              >\n                Edit\n              </button>\n              <button\n                onClick={() => handleDelete(job.id)}\n                className=\"text-red-500 hover:underline\"\n              >\n                Delete\n              </button>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  )\n} "],"names":[],"mappings":"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","debugId":null}}]
}