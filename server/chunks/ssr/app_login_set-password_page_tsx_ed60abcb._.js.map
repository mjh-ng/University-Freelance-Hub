{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/markhong/creative-project-520521/app/login/set-password/page.tsx"],"sourcesContent":["'use client'\n\nimport { useEffect, useState } from 'react'\nimport { useRouter } from 'next/navigation'\nimport supabase from '@/lib/supabaseBrowserClient'\n\nexport default function SetPasswordPage() {\n  const router = useRouter()\n  const [password, setPassword] = useState('')\n  const [confirmPassword, setConfirmPassword] = useState('')\n  const [message, setMessage] = useState('Verifying link...')\n  const [verified, setVerified] = useState(false)\n\n  useEffect(() => {\n    const trySetSession = async () => {\n      const hash = window.location.hash\n      const params = new URLSearchParams(hash.replace('#', '?'))\n\n      const access_token = params.get('access_token')\n      const refresh_token = params.get('refresh_token')\n\n      if (access_token && refresh_token) {\n        const { error } = await supabase.auth.setSession({\n          access_token,\n          refresh_token,\n        })\n\n        if (error) {\n          setMessage('❌ Could not validate link. Try logging in again.')\n        } else {\n          setMessage('')\n          setVerified(true)\n        }\n      } else {\n        // fallback in case it's already restored\n        const { data } = await supabase.auth.getSession()\n        if (data.session) {\n          setMessage('')\n          setVerified(true)\n        } else {\n          setMessage('❌ Link is invalid or expired.')\n        }\n      }\n    }\n\n    trySetSession()\n  }, [])\n\n  const handleSetPassword = async (e: React.FormEvent) => {\n    e.preventDefault()\n    setMessage('Setting password...')\n\n    if (!password || !confirmPassword) {\n      setMessage('❌ Please fill in both fields.')\n      return\n    }\n\n    if (password !== confirmPassword) {\n      setMessage('❌ Passwords do not match.')\n      return\n    }\n\n    const { error } = await supabase.auth.updateUser({ password })\n\n    if (error) {\n      setMessage('❌ Failed to set password: ' + error.message)\n    } else {\n      setMessage('✅ Password set! Redirecting...')\n      setTimeout(() => router.replace('/'), 1200)\n    }\n  }\n\n  return (\n    <div className=\"p-6 max-w-md mx-auto text-center\">\n      <h1 className=\"text-2xl font-bold mb-4\">Set Your Password</h1>\n\n      {message && <p className=\"mb-4 text-sm text-gray-700\">{message}</p>}\n\n      {verified && (\n        <form onSubmit={handleSetPassword} className=\"space-y-4\">\n          <input\n            type=\"password\"\n            placeholder=\"Create password\"\n            className=\"border px-3 py-2 w-full rounded\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            required\n          />\n          <input\n            type=\"password\"\n            placeholder=\"Confirm password\"\n            className=\"border px-3 py-2 w-full rounded\"\n            value={confirmPassword}\n            onChange={(e) => setConfirmPassword(e.target.value)}\n            required\n          />\n          <button\n            type=\"submit\"\n            className=\"bg-black text-white px-4 py-2 rounded w-full\"\n          >\n            Set Password\n          </button>\n        </form>\n      )}\n    </div>\n  )\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAJA;;;;;AAMe,SAAS;IACtB,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IACvB,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACvD,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEzC,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,gBAAgB;YACpB,MAAM,OAAO,OAAO,QAAQ,CAAC,IAAI;YACjC,MAAM,SAAS,IAAI,gBAAgB,KAAK,OAAO,CAAC,KAAK;YAErD,MAAM,eAAe,OAAO,GAAG,CAAC;YAChC,MAAM,gBAAgB,OAAO,GAAG,CAAC;YAEjC,IAAI,gBAAgB,eAAe;gBACjC,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,4HAAA,CAAA,UAAQ,CAAC,IAAI,CAAC,UAAU,CAAC;oBAC/C;oBACA;gBACF;gBAEA,IAAI,OAAO;oBACT,WAAW;gBACb,OAAO;oBACL,WAAW;oBACX,YAAY;gBACd;YACF,OAAO;gBACL,yCAAyC;gBACzC,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,4HAAA,CAAA,UAAQ,CAAC,IAAI,CAAC,UAAU;gBAC/C,IAAI,KAAK,OAAO,EAAE;oBAChB,WAAW;oBACX,YAAY;gBACd,OAAO;oBACL,WAAW;gBACb;YACF;QACF;QAEA;IACF,GAAG,EAAE;IAEL,MAAM,oBAAoB,OAAO;QAC/B,EAAE,cAAc;QAChB,WAAW;QAEX,IAAI,CAAC,YAAY,CAAC,iBAAiB;YACjC,WAAW;YACX;QACF;QAEA,IAAI,aAAa,iBAAiB;YAChC,WAAW;YACX;QACF;QAEA,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,4HAAA,CAAA,UAAQ,CAAC,IAAI,CAAC,UAAU,CAAC;YAAE;QAAS;QAE5D,IAAI,OAAO;YACT,WAAW,+BAA+B,MAAM,OAAO;QACzD,OAAO;YACL,WAAW;YACX,WAAW,IAAM,OAAO,OAAO,CAAC,MAAM;QACxC;IACF;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAG,WAAU;0BAA0B;;;;;;YAEvC,yBAAW,8OAAC;gBAAE,WAAU;0BAA8B;;;;;;YAEtD,0BACC,8OAAC;gBAAK,UAAU;gBAAmB,WAAU;;kCAC3C,8OAAC;wBACC,MAAK;wBACL,aAAY;wBACZ,WAAU;wBACV,OAAO;wBACP,UAAU,CAAC,IAAM,YAAY,EAAE,MAAM,CAAC,KAAK;wBAC3C,QAAQ;;;;;;kCAEV,8OAAC;wBACC,MAAK;wBACL,aAAY;wBACZ,WAAU;wBACV,OAAO;wBACP,UAAU,CAAC,IAAM,mBAAmB,EAAE,MAAM,CAAC,KAAK;wBAClD,QAAQ;;;;;;kCAEV,8OAAC;wBACC,MAAK;wBACL,WAAU;kCACX;;;;;;;;;;;;;;;;;;AAOX","debugId":null}}]
}