{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/markhong/creative-project-520521/components/profilePanel.tsx"],"sourcesContent":["'use client'\n\nimport { useEffect, useState } from 'react'\nimport supabase from '@/lib/supabaseBrowserClient'\n\ninterface ProfileData {\n  id: string\n  name: string | null\n  description: string | null\n  tags: string[] | null\n  jobs_done: string[] | null\n}\n\nexport default function ProfilePanel({ userId }: { userId: string }) {\n  const [profile, setProfile] = useState<ProfileData | null>(null)\n  const [loading, setLoading] = useState(true)\n\n  useEffect(() => {\n    const loadProfile = async () => {\n      setLoading(true)\n      const { data, error } = await supabase\n        .from('profiles')\n        .select('*')\n        .eq('id', userId)\n        .single()\n\n      if (error && error.code !== 'PGRST116') {\n        // PGRST116 = \"Results contain 0 rows\" (aka no match)\n        console.error('Profile fetch error:', error.message)\n      }\n\n      setProfile(data || null)\n      setLoading(false)\n    }\n\n    if (userId) {\n      loadProfile()\n    }\n  }, [userId])\n\n  if (loading) return <div className=\"p-4 text-gray-500\">Loading profile...</div>\n\n  if (!profile) {\n    return (\n      <div className=\"p-6 bg-white text-black rounded-lg shadow-lg\">\n        <h2 className=\"text-xl font-bold mb-2\">No Profile Yet</h2>\n        <p className=\"text-sm text-gray-600 mb-4\">\n          You havenâ€™t created a public profile yet. Click below to get started.\n        </p>\n        <button\n          onClick={() => alert('TODO: open profile form')}\n          className=\"bg-black text-white px-4 py-2 rounded hover:bg-gray-800 transition\"\n        >\n          Create Profile\n        </button>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"w-full h-full p-6 bg-white text-black rounded-lg shadow-lg overflow-y-auto\">\n      <h2 className=\"text-2xl font-bold\">{profile.name || 'Unnamed User'}</h2>\n\n      {profile.description && (\n        <p className=\"mt-2 text-gray-600 whitespace-pre-wrap\">{profile.description}</p>\n      )}\n\n      {profile.tags && profile.tags.length > 0 && (\n        <div className=\"mt-4\">\n          <h3 className=\"font-semibold\">Skills & Tags</h3>\n          <div className=\"flex flex-wrap gap-2 mt-1\">\n            {profile.tags.map((tag) => (\n              <span\n                key={tag}\n                className=\"px-2 py-1 bg-gray-200 rounded text-sm\"\n              >\n                {tag}\n              </span>\n            ))}\n          </div>\n        </div>\n      )}\n\n      {profile.jobs_done && profile.jobs_done.length > 0 && (\n        <div className=\"mt-6\">\n          <h3 className=\"font-semibold\">Completed Jobs</h3>\n          <ul className=\"list-disc list-inside mt-1 text-sm text-gray-800\">\n            {profile.jobs_done.map((job, idx) => (\n              <li key={idx}>{job}</li>\n            ))}\n          </ul>\n        </div>\n      )}\n    </div>\n  )\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AAHA;;;;AAae,SAAS,aAAa,EAAE,MAAM,EAAsB;IACjE,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAsB;IAC3D,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEvC,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,cAAc;YAClB,WAAW;YACX,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,4HAAA,CAAA,UAAQ,CACnC,IAAI,CAAC,YACL,MAAM,CAAC,KACP,EAAE,CAAC,MAAM,QACT,MAAM;YAET,IAAI,SAAS,MAAM,IAAI,KAAK,YAAY;gBACtC,qDAAqD;gBACrD,QAAQ,KAAK,CAAC,wBAAwB,MAAM,OAAO;YACrD;YAEA,WAAW,QAAQ;YACnB,WAAW;QACb;QAEA,IAAI,QAAQ;YACV;QACF;IACF,GAAG;QAAC;KAAO;IAEX,IAAI,SAAS,qBAAO,8OAAC;QAAI,WAAU;kBAAoB;;;;;;IAEvD,IAAI,CAAC,SAAS;QACZ,qBACE,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAG,WAAU;8BAAyB;;;;;;8BACvC,8OAAC;oBAAE,WAAU;8BAA6B;;;;;;8BAG1C,8OAAC;oBACC,SAAS,IAAM,MAAM;oBACrB,WAAU;8BACX;;;;;;;;;;;;IAKP;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAG,WAAU;0BAAsB,QAAQ,IAAI,IAAI;;;;;;YAEnD,QAAQ,WAAW,kBAClB,8OAAC;gBAAE,WAAU;0BAA0C,QAAQ,WAAW;;;;;;YAG3E,QAAQ,IAAI,IAAI,QAAQ,IAAI,CAAC,MAAM,GAAG,mBACrC,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAG,WAAU;kCAAgB;;;;;;kCAC9B,8OAAC;wBAAI,WAAU;kCACZ,QAAQ,IAAI,CAAC,GAAG,CAAC,CAAC,oBACjB,8OAAC;gCAEC,WAAU;0CAET;+BAHI;;;;;;;;;;;;;;;;YAUd,QAAQ,SAAS,IAAI,QAAQ,SAAS,CAAC,MAAM,GAAG,mBAC/C,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAG,WAAU;kCAAgB;;;;;;kCAC9B,8OAAC;wBAAG,WAAU;kCACX,QAAQ,SAAS,CAAC,GAAG,CAAC,CAAC,KAAK,oBAC3B,8OAAC;0CAAc;+BAAN;;;;;;;;;;;;;;;;;;;;;;AAOvB","debugId":null}},
    {"offset": {"line": 176, "column": 0}, "map": {"version":3,"sources":["file:///Users/markhong/creative-project-520521/app/find/page.tsx"],"sourcesContent":["'use client'\n\nimport { useEffect, useState } from 'react'\nimport { useRouter } from 'next/navigation'\nimport supabase from '@/lib/supabaseBrowserClient'\nimport { motion } from 'framer-motion'\nimport ProfilePanel from '@/components/profilePanel'\n\nexport default function FindPage() {\n    const [jobs, setJobs] = useState<any[]>([])\n    const [userId, setUserId] = useState<string | null>(null)\n    const router = useRouter()\n\n    useEffect(() => {\n        loadOtherJobs()\n      }, [])\n\n      const getUser = async () => {\n        const { data } = await supabase.auth.getUser()\n        setUserId(data.user?.id || null)\n      }\n      getUser()\n\n      const loadOtherJobs = async () => {\n        const { data: userData } = await supabase.auth.getUser()\n        const email = userData.user?.email\n      \n        const { data, error } = await supabase\n          .from('jobs')\n          .select(`\n            *,\n            claims (\n              id,\n              claimer_email\n            )\n          `)\n          .neq('poster_email', email) // for FIND page logic\n          .order('created_at', { ascending: false })\n      \n        if (!error && data) {\n          const jobsWithClaimStatus = data.map((job) => ({\n            ...job,\n            claimedByUser: job.claims?.some((claim: { claimer_email: string | undefined }) => claim.claimer_email === email),\n          }))\n          setJobs(jobsWithClaimStatus)\n        }\n      }\n      \n      const handleClaim = async (jobId: string) => {\n        const { data: userData } = await supabase.auth.getUser()\n        const email = userData.user?.email\n        if (!email) return\n      \n        const { error } = await supabase.from('claims').insert({\n          job_id: jobId,\n          claimer_email: email,\n        })\n      \n        if (!error) {\n          loadOtherJobs()\n        }\n      }\n\nreturn (\n    <>\n      {/* Static background layer â€” cadet gray */}\n      <div className=\"fixed inset-0 z-0\" style={{ background: 'rgb(152,183,191)' }} />\n  \n      <motion.div\n        initial={{ x: '100%' }}\n        animate={{ x: 0}}\n        exit={{ x: '-100%' }}\n        transition={{ duration: 0.6 }}\n        style={{\n          position: 'absolute',\n          width: '100vw',\n          height: '100vh',\n          overflow: 'auto',\n          background: 'rgb(241,180,151)'\n        }}\n        className=\"z-10\"\n      >\n        <div className=\"relative\">\n        {userId && (\n            <div className=\"absolute top-0 right-0 w-80 h-80\">\n            <ProfilePanel userId={userId} />\n            </div>\n        )}\n        </div>\n        <div className=\"relative px-6 max-w-3xl mx-auto pt-6\">\n        <h1 className=\"text-2xl font-bold mb-6 text-center text-white\">Available Jobs</h1>\n        <div className=\"space-y-6\">\n            {jobs.map((job) => (\n            <div key={job.id} className=\"border p-4 rounded bg-white\">\n                <h3 className=\"text-lg font-semibold\">{job.title}</h3>\n                <p className=\"text-gray-600\">{job.description}</p>\n                <p className=\"text-sm text-gray-400 mt-1\">\n                {job.is_paid ? 'ðŸ’° Paid' : 'ðŸš« Unpaid'}\n                </p>\n                <p className=\"text-xs text-gray-500 mt-2\">\n                Posted by: {job.poster_email?.split('@')[0] || 'unknown'}\n                </p>\n\n                {job.claimedByUser ? (\n                <button\n                    disabled\n                    className=\"mt-4 bg-gray-400 text-white px-4 py-2 rounded cursor-not-allowed\"\n                >\n                    âœ… Claimed\n                </button>\n                ) : (\n                <button\n                    onClick={() => handleClaim(job.id)}\n                    className=\"mt-4 bg-black text-white px-4 py-2 rounded hover:bg-gray-800 transition\"\n                >\n                    Claim Job\n                </button>\n                )}\n            </div>\n            ))}\n        </div>\n        </div>\n\n  \n          <div\n            onClick={() => router.push('/post')}\n            className=\"fixed top-0 left-0 h-screen w-12 bg-[rgb(152,183,191)] hover:w-48 transition-all duration-300 flex items-center justify-center cursor-pointer z-50 group\"\n          >\n            <span className=\"text-sm text-black opacity-0 group-hover:opacity-100 transition duration-300 -rotate-90 whitespace-nowrap\">\n              Post â†’\n            </span>\n          </div>\n      </motion.div>\n    </>\n  )  \n}"],"names":[],"mappings":"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","debugId":null}}]
}