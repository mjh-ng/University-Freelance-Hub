{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/markhong/creative-project-520521/lib/supabaseBrowserClient.ts"],"sourcesContent":["'use client'\n\nimport { createClient } from '@supabase/supabase-js'\n\nconst supabase = createClient(\n  process.env.NEXT_PUBLIC_SUPABASE_URL!,\n  process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!,\n  {\n    auth: {\n      persistSession: true,\n      storage: typeof window !== 'undefined' ? localStorage : undefined,\n    },\n  }\n)\n\nexport default supabase\n"],"names":[],"mappings":";;;AAKE;AAHF;AAFA;;AAIA,MAAM,WAAW,CAAA,GAAA,0LAAA,CAAA,eAAY,AAAD,sUAG1B;IACE,MAAM;QACJ,gBAAgB;QAChB,SAAS,uCAAgC;IAC3C;AACF;uCAGa","debugId":null}},
    {"offset": {"line": 30, "column": 0}, "map": {"version":3,"sources":["file:///Users/markhong/creative-project-520521/app/post/page.tsx"],"sourcesContent":["'use client'\n\nimport { useEffect, useState } from 'react'\nimport { useRouter } from 'next/navigation'\nimport supabase from '@/lib/supabaseBrowserClient'\nimport { motion } from 'framer-motion'\n\nexport default function PostPage() {\n  const [jobs, setJobs] = useState<any[]>([])\n  const [editingJob, setEditingJob] = useState<any | null>(null)\n  const [title, setTitle] = useState('')\n  const [description, setDescription] = useState('')\n  const [isPaid, setIsPaid] = useState(false)\n  const router = useRouter()\n\n  useEffect(() => {\n    const loadJobs = async () => {\n      const { data, error } = await supabase\n        .from('jobs')\n        .select('*')\n        .order('created_at', { ascending: false })\n\n      if (!error) {\n        setJobs(data || [])\n      }\n    }\n\n    loadJobs()\n  }, [])\n\n  const resetForm = () => {\n    setTitle('')\n    setDescription('')\n    setIsPaid(false)\n    setEditingJob(null)\n  }\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault()\n\n    if (editingJob) {\n      await supabase.from('jobs').update({ title, description, is_paid: isPaid }).eq('id', editingJob.id)\n    } else {\n      const {\n        data: { user },\n      } = await supabase.auth.getUser()\n\n      await supabase.from('jobs').insert({\n        title,\n        description,\n        is_paid: isPaid,\n        poster_email: user?.email,\n      })\n    }\n\n    resetForm()\n    const { data } = await supabase.from('jobs').select('*').order('created_at', { ascending: false })\n    setJobs(data || [])\n  }\n\n  const handleEdit = (job: any) => {\n    setEditingJob(job)\n    setTitle(job.title)\n    setDescription(job.description)\n    setIsPaid(job.is_paid)\n  }\n\n  const handleDelete = async (id: number) => {\n    await supabase.from('jobs').delete().eq('id', id)\n    setJobs(jobs.filter((job) => job.id !== id))\n  }\n\n  return (\n    <>\n      {/* Static background layer ‚Äî apricot */}\n      <div className=\"fixed inset-0 z-0\" style={{ background: 'rgb(241,180,151)' }} />\n  \n      <motion.div\n        initial={{ x: '-100%' }}\n        animate={{ x: 0 }}\n        exit={{ x: '100%' }}\n        transition={{ duration: 0.6 }}\n        style={{\n          position: 'absolute',\n          width: '100vw',\n          height: '100vh',\n          overflow: 'auto',\n          background: 'rgb(152,183,191)'\n        }}\n        className=\"z-10\"\n      >\n        <div className=\"relative px-6 max-w-3xl mx-auto pt-6\">\n          <h1 className=\"text-2xl font-bold mb-6 text-center\">My Posted Jobs</h1>\n\n          <form onSubmit={handleSubmit} className=\"space-y-4 bg-white p-4 rounded mb-8\">\n            <input\n              type=\"text\"\n              className=\"border px-3 py-2 rounded w-full\"\n              placeholder=\"Job title\"\n              value={title}\n              onChange={(e) => setTitle(e.target.value)}\n              required\n            />\n            <textarea\n              className=\"border px-3 py-2 rounded w-full\"\n              placeholder=\"Job description\"\n              value={description}\n              onChange={(e) => setDescription(e.target.value)}\n              required\n            />\n            <label className=\"flex items-center space-x-2\">\n              <input\n                type=\"checkbox\"\n                checked={isPaid}\n                onChange={(e) => setIsPaid(e.target.checked)}\n              />\n              <span>Paid job</span>\n            </label>\n            <button\n              type=\"submit\"\n              className=\"bg-black text-white px-4 py-2 rounded w-full\"\n            >\n              {editingJob ? 'Update Job' : 'Post Job'}\n            </button>\n            {editingJob && (\n              <button\n                type=\"button\"\n                className=\"text-sm text-gray-500 underline\"\n                onClick={resetForm}\n              >\n                Cancel edit\n              </button>\n            )}\n          </form>\n\n          <div className=\"space-y-6\">\n            {jobs.map((job) => (\n              <div key={job.id} className=\"border p-4 rounded bg-white\">\n                <h3 className=\"text-lg font-semibold\">{job.title}</h3>\n                <p className=\"text-gray-600\">{job.description}</p>\n                <p className=\"text-sm text-gray-400 mt-1\">\n                  {job.is_paid ? 'üí∞ Paid' : 'üö´ Unpaid'}\n                </p>\n                <p className=\"text-xs text-gray-500 mt-2\">\n                  Claimer: {job.selected_claimer_email?.split('@')[0] || 'None yet'}\n                </p>\n                <div className=\"flex gap-2 mt-2\">\n                  <button\n                    onClick={() => handleEdit(job)}\n                    className=\"text-sm text-blue-600 underline\"\n                  >\n                    ‚úé Edit\n                  </button>\n                  <button\n                    onClick={() => handleDelete(job.id)}\n                    className=\"text-sm text-red-600 underline\"\n                  >\n                    üóë Delete\n                  </button>\n                </div>\n              </div>\n            ))}\n          </div>\n\n          <div\n            onClick={() => router.push('/find')}\n            className=\"fixed top-0 right-0 h-screen w-3 bg-[rgb(241,180,151)] hover:w-32 transition-all duration-300 flex items-center justify-center cursor-pointer z-50 group\"\n          >\n            <span className=\"text-sm text-black opacity-0 group-hover:opacity-100 transition duration-300 rotate-90 whitespace-nowrap\">\n              ‚Üê Find\n            </span>\n          </div>\n        </div>\n      </motion.div>\n    </>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}